<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="exam.core.sales.mapper.SalesOrderMapper">
    <resultMap id="BaseResultMap" type="exam.core.sales.dto.OrderSummary">
        <result column="COMPANY_ID" property="companyId" jdbcType="DECIMAL"/><!--Long companyId; 公司ID-->
        <result column="COMPANY_NAME" property="companyName" jdbcType="VARCHAR"/><!--String companyName; //公司名称-->
        <result column="CUSTOMER_ID" property="customerId" jdbcType="DECIMAL"/><!--Long customerId; //客户ID-->
        <result column="CUSTOMER_NAME" property="customerName" jdbcType="VARCHAR"/><!--String customerName; //客户名称-->
        <result column="HEADER_ID" property="headerId" jdbcType="DECIMAL"/><!--Long headerId; //订单头ID-->
        <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR"/><!--String orderNumber; //订单编号-->
        <result column="ORDER_DATE" property="orderDate" /><!--Date orderDate; //订单日期-->
        <result column="ORDER_STATUS" property="orderStatus" jdbcType="VARCHAR"/><!--String orderStatus; //订单状态-->
        <result column="INVENTORY_ITEM_ID" property="inventoryItemId" jdbcType="DECIMAL"/><!--Long inventoryItemId; //物料ID-->
        <result column="ITEM_CODE" property="itemCode" jdbcType="VARCHAR"/><!--String itemCode; //物料编码-->
        <result column="orderMoney" property="orderMoney" jdbcType="DECIMAL"/><!--String itemCode; //订单金额-->
    </resultMap>

    <select id="summary" parameterType="exam.core.sales.dto.OrderSummary" resultMap="BaseResultMap">
        select
            oc.COMPANY_ID,oc.COMPANY_NAME,
            ac.CUSTOMER_ID,ac.CUSTOMER_NAME,
            orh.HEADER_ID,orh.ORDER_NUMBER,orh.ORDER_DATE,orh.ORDER_STATUS,
            (select sum(orl.ORDERD_QUANTITY*orl.UNIT_SELLING_PRICE)
            from hap_om_order_lines orl where orh.HEADER_ID = orl.HEADER_ID) as orderMoney
        from
        hap_org_companys oc,
        hap_ar_customers ac,
        hap_om_order_headers orh
        <where>
            orh.COMPANY_ID = oc.COMPANY_ID
            and orh.CUSTOMER_ID = ac.CUSTOMER_ID
            <if test="companyId != null">and orh.COMPANY_ID=#{companyId,jdbcType=DECIMAL}</if>
            <if test="customerId != null">and orh.CUSTOMER_ID=#{customerId,jdbcType=DECIMAL}</if>
            <!--<if test="orderNumber != null">and orh.ORDER_NUMBER=#{orderNumber,jdbcType=VARCHAR}</if>-->
            <if test="orderNumber != null">and orh.ORDER_NUMBER LIKE CONCAT(CONCAT('%', #{orderNumber}), '%')</if>
            <if test="inventoryItemId != null">
                and exists (select 1 from hap_om_order_lines orl
                              where orh.HEADER_ID = orl.HEADER_ID and orl.INVENTORY_ITEM_ID=#{inventoryItemId,jdbcType=DECIMAL})
            </if>
            <if test="orderStatus != null">and orh.ORDER_STATUS=#{orderStatus,jdbcType=VARCHAR}</if>
        </where>
    </select>


    <select id="detail" parameterType="exam.core.sales.dto.OrderSummary" resultMap="BaseResultMap">
        select
            oc.COMPANY_ID,oc.COMPANY_NAME,
            ac.CUSTOMER_ID,ac.CUSTOMER_NAME,
            orh.HEADER_ID,orh.ORDER_NUMBER,orh.ORDER_DATE,orh.ORDER_STATUS,
            (select sum(orl.ORDERD_QUANTITY*orl.UNIT_SELLING_PRICE)
            from hap_om_order_lines orl where orh.HEADER_ID = orl.HEADER_ID) as orderMoney
        from
            hap_org_companys oc,
            hap_ar_customers ac,
            hap_om_order_headers orh
        where orh.COMPANY_ID = oc.COMPANY_ID
            and orh.CUSTOMER_ID = ac.CUSTOMER_ID
            and orh.HEADER_ID=#{headerId,jdbcType=VARCHAR}
    </select>
</mapper>